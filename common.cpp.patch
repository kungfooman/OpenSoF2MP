--- a/codemp/qcommon/common.cpp
+++ b/codemp/qcommon/common.cpp
@@ -4,13 +4,12 @@
 #include "qcommon/exe_headers.h"
 
 #include "GenericParser2.h"
-#include "stringed_ingame.h"
 #include "qcommon/game_version.h"
 #ifndef __linux__
 #include "qcommon/platform.h"
 #endif
 
-#include "../server/NPCNav/navigator.h"
+//#include "../server/NPCNav/navigator.h"
 
 #define	MAXPRINTMSG	4096
 
@@ -1082,7 +1081,7 @@ void Com_Init( char *commandLine ) {
 
 		Cvar_Init ();
 
-		navigator.Init();
+		//navigator.Init();
 
 		// prepare enough of the subsystems to handle
 		// cvar and command buffer management
@@ -1111,7 +1110,7 @@ void Com_Init( char *commandLine ) {
 
 		Com_InitJournaling();
 
-		Cbuf_AddText ("exec mpdefault.cfg\n");
+		Cbuf_AddText ("exec sof2mp_default.cfg\n");
 
 		// skip the jampconfig.cfg if "safe" is on the command line
 		if ( !Com_SafeMode() ) {
@@ -1144,9 +1143,13 @@ void Com_Init( char *commandLine ) {
 		com_maxfps = Cvar_Get ("com_maxfps", "125", CVAR_ARCHIVE);
 		com_blood = Cvar_Get ("com_blood", "1", CVAR_ARCHIVE);
 
+#ifdef _DEBUG
+		com_developer = Cvar_Get ("developer", "1", CVAR_TEMP );
+#else
 		com_developer = Cvar_Get ("developer", "0", CVAR_TEMP );
-		com_vmdebug = Cvar_Get ("vmdebug", "0", CVAR_TEMP );
-		com_logfile = Cvar_Get ("logfile", "0", CVAR_TEMP );
+#endif
+		com_vmdebug = Cvar_Get ("vmdebug", "1", CVAR_TEMP );
+		com_logfile = Cvar_Get ("logfile", "2", CVAR_TEMP );
 
 		com_timescale = Cvar_Get ("timescale", "1", CVAR_CHEAT | CVAR_SYSTEMINFO );
 		com_fixedtime = Cvar_Get ("fixedtime", "0", CVAR_CHEAT);
@@ -1217,8 +1220,6 @@ void Com_Init( char *commandLine ) {
 		s = va("%s %s %s", JK_VERSION, PLATFORM_STRING, __DATE__ );
 		com_version = Cvar_Get ("version", s, CVAR_ROM | CVAR_SERVERINFO );
 
-		SE_Init();
-
 		Sys_Init();
 		Netchan_Init( Com_Milliseconds() & 0xffff );	// pick a port value that should be nice and random
 		VM_Init();
@@ -1286,7 +1287,7 @@ void Com_WriteConfigToFile( const char *filename ) {
 		return;
 	}
 
-	FS_Printf (f, "// generated by Star Wars Jedi Academy MP, do not modify\n");
+	FS_Printf (f, "// generated by soldier of fortune 2, do not modify\n");
 	Key_WriteBindings (f);
 	Cvar_WriteVariables (f);
 	FS_FCloseFile( f );
@@ -1579,7 +1580,6 @@ try
 Com_Shutdown
 =================
 */
-void MSG_shutdownHuffman();
 void Com_Shutdown (void) 
 {
 	CM_ClearMap();
@@ -1594,17 +1594,6 @@ void Com_Shutdown (void)
 		FS_FCloseFile( com_journalFile );
 		com_journalFile = 0;
 	}
-
-	MSG_shutdownHuffman();
-/*
-	// Only used for testing changes to huffman frequency table when tuning.
-	{
-		extern float Huff_GetCR(void);
-		char mess[256];
-		sprintf(mess,"Eff. CR = %f\n",Huff_GetCR());
-		OutputDebugString(mess);
-	}
-*/
 }
 
 
diff --git a/codemp/qcommon/cvar.cpp b/codemp/qcommon/cvar.cpp
index 3e01c41..62c59dd 100644
