--- a/codemp/qcommon/files_pc.cpp
+++ b/codemp/qcommon/files_pc.cpp
@@ -497,7 +497,7 @@ FS_FOpenFileWrite
 
 ===========
 */
-fileHandle_t FS_FOpenFileWrite( const char *filename ) {
+fileHandle_t FS_FOpenFileWrite( const char *filename, const bool astext ) {
 	char			*ospath;
 	fileHandle_t	f;
 
@@ -521,7 +521,7 @@ fileHandle_t FS_FOpenFileWrite( const char *filename ) {
 	// enabling the following line causes a recursive function call loop
 	// when running with +set logfile 1 +set developer 1
 	//Com_DPrintf( "writing to: %s\n", ospath );
-	fsh[f].handleFiles.file.o = fopen( ospath, "wb" );
+	fsh[f].handleFiles.file.o = fopen( ospath, (astext ? "w" : "wb") );
 
 	Q_strncpyz( fsh[f].name, filename, sizeof( fsh[f].name ) );
 
@@ -538,7 +538,7 @@ FS_FOpenFileAppend
 
 ===========
 */
-fileHandle_t FS_FOpenFileAppend( const char *filename ) {
+fileHandle_t FS_FOpenFileAppend( const char *filename, const bool astext = false ) {
 	char			*ospath;
 	fileHandle_t	f;
 
@@ -564,7 +564,7 @@ fileHandle_t FS_FOpenFileAppend( const char *filename ) {
 		return 0;
 	}
 
-	fsh[f].handleFiles.file.o = fopen( ospath, "ab" );
+	fsh[f].handleFiles.file.o = fopen( ospath, (astext ? "a" : "ab") );
 	fsh[f].handleSync = qfalse;
 	if (!fsh[f].handleFiles.file.o) {
 		f = 0;
@@ -3006,7 +3006,7 @@ void FS_Restart( int checksumFeed ) {
 	// if we can't find default.cfg, assume that the paths are
 	// busted and error out now, rather than getting an unreadable
 	// graphics screen when the font fails to load
-	if ( FS_ReadFile( "mpdefault.cfg", NULL ) <= 0 ) {
+	if ( FS_ReadFile( "sof2mp_default.cfg", NULL ) <= 0 ) {
 		// this might happen when connecting to a pure server not using BASEGAME/pak0.pk3
 		// (for instance a TA demo server)
 		if (lastValidBase[0]) {
@@ -3019,7 +3019,7 @@ void FS_Restart( int checksumFeed ) {
 			Com_Error( ERR_DROP, "Invalid game folder\n" );
 			return;
 		}
-		Com_Error( ERR_FATAL, "Couldn't load mpdefault.cfg" );
+		Com_Error( ERR_FATAL, "Couldn't load sof2mp_default.cfg" );
 	}
 
 	// bk010116 - new check before safeMode
@@ -3074,6 +3074,7 @@ Handle based file calls for virtual machines
 int		FS_FOpenFileByMode( const char *qpath, fileHandle_t *f, fsMode_t mode ) {
 	int		r;
 	qboolean	sync;
+	bool astext = false;
 
 	sync = qfalse;
 
@@ -3081,17 +3082,27 @@ int		FS_FOpenFileByMode( const char *qpath, fileHandle_t *f, fsMode_t mode ) {
 	case FS_READ:
 		r = FS_FOpenFileRead( qpath, f, qtrue );
 		break;
+	case FS_WRITE_TEXT:
+		astext = true;
 	case FS_WRITE:
-		*f = FS_FOpenFileWrite( qpath );
+		*f = FS_FOpenFileWrite( qpath, astext );
 		r = 0;
 		if (*f == 0) {
 			r = -1;
 		}
 		break;
+	case FS_APPEND_SYNC_TEXT:
+		sync = qtrue;
+	case FS_APPEND_TEXT:
+		*f = FS_FOpenFileAppend( qpath, true );
+		r = 0;
+		if (*f == 0) {
+			r = -1;
+		}
 	case FS_APPEND_SYNC:
 		sync = qtrue;
 	case FS_APPEND:
-		*f = FS_FOpenFileAppend( qpath );
+		*f = FS_FOpenFileAppend( qpath, astext );
 		r = 0;
 		if (*f == 0) {
 			r = -1;
diff --git a/codemp/qcommon/game_version.h b/codemp/qcommon/game_version.h
index 36aaba9..dfe0ca1 100644
