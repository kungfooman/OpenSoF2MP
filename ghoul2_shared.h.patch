--- a/codemp/ghoul2/ghoul2_shared.h
+++ b/codemp/ghoul2/ghoul2_shared.h
@@ -30,8 +30,6 @@ struct model_s;
 #define G2T_CG_TIME (1)
 #define NUM_G2T_TIME (2)
 
-//void		G2API_SetTime(int currentTime,int clock);
-//int		G2API_GetTime(int argTime); // this may or may not return arg depending on ghoul2_time cvar
 //rww - RAGDOLL_END
 
 //===================================================================
@@ -185,43 +183,6 @@ struct boltInfo_t{
 	{}
 };
 
-#ifdef _SOF2
-typedef enum
-{
-	PGORE_NONE,
-	PGORE_ARMOR,
-	PGORE_BULLETSMALL,
-	PGORE_BULLETMED,
-	PGORE_BULLETBIG,
-	PGORE_HEGRENADE,
-	PGORE_COUNT
-} goreEnum_t;
-
-struct goreEnumShader_t
-{
-	goreEnum_t		shaderEnum;
-	char			shaderName[MAX_QPATH];
-};
-
-struct SSkinGoreData
-{
-	vec3_t			angles;
-	vec3_t			position;
-	int				currentTime;
-	int				entNum;
-	vec3_t			rayDirection;	// in world space
-	vec3_t			hitLocation;	// in world space
-	vec3_t			scale;
-	float			SSize;			// size of splotch in the S texture direction in world units
-	float			TSize;			// size of splotch in the T texture direction in world units
-	float			theta;			// angle to rotate the splotch
-
-//	qhandle_t		shader;			// handle to shader for gore, this better be rendered after the shader of the underlying surface					
-									// this shader should also have "clamp" mode, not tiled.
-	goreEnum_t		shaderEnum;		// enum that'll get switched over to the shader's actual handle
-};
-#endif // _SOF2
-
 #define MAX_GHOUL_COUNT_BITS 8 // bits required to send across the MAX_G2_MODELS inside of the networking - this is the only restriction on ghoul models possible per entity
 
 typedef vector <surfaceInfo_t> surfaceInfo_v;
diff --git a/codemp/icarus/GameInterface.cpp b/codemp/icarus/GameInterface.cpp
index aa3de8d..2b97232 100644
